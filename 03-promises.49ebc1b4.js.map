{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,aAAY,KACNN,GACFI,EAAQ,C,SACNN,E,MACAC,IAIJM,EAAO,C,SACLP,E,MACAC,GACA,GACDA,EAAM,G,CAlBEQ,SAASC,cAAc,SAwC/BC,iBAAiB,UAlBAC,IACtBA,EAAEC,iBACF,MAAMZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,GAAWH,EAAEI,OAAOC,SAEzC,IAAIC,EAAUC,OAAOlB,EAAMmB,OACvBC,EAASF,OAAOL,EAAKM,OACrBE,EAAWH,OAAOJ,EAAOK,OAE7B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAUC,IAC7BxB,EAAcwB,EAAGL,GAASM,MAAKlB,IAC7BmB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBrB,EAAIN,eAAqBM,EAAEL,UAAgB,IACvF2B,OAAMrB,IACPkB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoBtB,EAAEP,eAAoBO,EAAEN,UAAe,IAErFiB,GAAWG,C","sources":["src/js/03-promises.js"],"sourcesContent":["'use strict';\n\nimport Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n \n  return new Promise((resolve, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({\n          position,\n          delay\n        });\n      }\n\n      reject({\n        position,\n        delay\n      });\n    }, delay);\n  });\n}\n\nconst onFormElSubmit = (e) => {\n  e.preventDefault();\n  const { delay, step, amount } = e.target.elements;\n\n  let delayEl = Number(delay.value);\n  let stepEl = Number(step.value);\n  let amountEl = Number(amount.value);\n\n  for (let i = 1; i <= amountEl; i++) {\n    createPromise(i, delayEl).then(resolve => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${resolve.position} in ${resolve.delay}ms`);\n    }).catch(reject => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${reject.position} in ${reject.delay}ms`);\n    });\n    delayEl += stepEl;\n  }\n};\n\nformEl.addEventListener('submit', onFormElSubmit);\n\n\n//   for (let i = 1; i <= amount; i++) {\n//   createPromise(i, delay).then(resolve => {\n//     console.log(resolve);\n//   }).catch(reject => {\n//     console.log(reject);\n//   });\n//   delay += step;\n// }\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setInterval","document","querySelector","addEventListener","e","preventDefault","step","amount","target","elements","delayEl","Number","value","stepEl","amountEl","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.49ebc1b4.js.map"}